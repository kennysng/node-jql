// polyfill for non-es6 environment
if (!global['Proxy']) global['Proxy'] = require('proxy-polyfill')

// exports
export { Database } from './database/index'
export { IDatabaseOptions } from './database/interface'
export { ResultSet } from './database/cursor/resultset'
export { JQLFunction } from './database/function/interface'
export { Schema } from './database/schema/index'
export { Table } from './database/schema/table'
export { Column } from './database/schema/column'
export { Sql } from './database/sql/interface'
export { Query } from './database/sql/query/index'
export { GroupBy } from './database/sql/query/groupBy/index'
export { OrderingTerm } from './database/sql/query/orderingTerm/index'
export { ResultColumn } from './database/sql/query/resultColumn/index'
export { TableOrSubquery } from './database/sql/query/tableOrSubquery/index'
export { JoinedTableOrSubquery } from './database/sql/query/tableOrSubquery/joined/index'
export { ConditionalExpression, Expression } from './database/sql/expression/interface'
export { BetweenExpression } from './database/sql/expression/between/index'
export { IBetweenExpression } from './database/sql/expression/between/interface'
export { BinaryExpression } from './database/sql/expression/binary/index'
export { IBinaryExpression } from './database/sql/expression/binary/interface'
export { CaseExpression } from './database/sql/expression/case/index'
export { ICaseExpression } from './database/sql/expression/case/interface'
export { ColumnExpression } from './database/sql/expression/column/index'
export { IColumnExpression } from './database/sql/expression/column/interface'
export { ExistsExpression } from './database/sql/expression/exists/index'
export { IExistsExpression } from './database/sql/expression/exists/interface'
export { FunctionExpression } from './database/sql/expression/function/index'
export { IFunctionExpression } from './database/sql/expression/function/interface'
export { AndExpressions, OrExpressions } from './database/sql/expression/grouped/index'
export { GroupedExpressions } from './database/sql/expression/grouped/interface'
export { InExpression } from './database/sql/expression/in/index'
export { IInExpression } from './database/sql/expression/in/interface'
export { IsNullExpression } from './database/sql/expression/isNull/index'
export { IIsNullExpression } from './database/sql/expression/isNull/interface'
export { LikeExpression } from './database/sql/expression/like/index'
export { ILikeExpression } from './database/sql/expression/like/interface'
export { UnknownExpression } from './database/sql/expression/unknown/index'
export { IUnknownExpression } from './database/sql/expression/unknown/interface'
export { ValueExpression } from './database/sql/expression/value/index'
export { IValueExpression } from './database/sql/expression/value/interface'
